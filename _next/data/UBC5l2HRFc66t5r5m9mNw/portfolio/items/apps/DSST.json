{"pageProps":{"data":{"title":"DSST","description":"An npm auto moving and parsing scripts. With other features as well.","date":"2020-10-01","order":4,"tech":"node,ts","banner":" { \"src\" : \"/images/portfolio/packages/DSST/dsst.jpg\", \"alt\":\"sup\" } ","id":"DSST"},"content":"\r\n#### Table Of Contents\r\n\r\n- [About](#About)\r\n- [Development](#Development)\r\n- [Design](#Design)\r\n- [Notes](#Notes)\r\n- [Links](#Links)\r\n\r\n#### About\r\n\r\nThis is a NodeJS command line tool to auto move and parse scripts. It is basically an auto rsync but with more features. You can define code sections with different comments and have them either included or excluded. \r\n\r\n#### Development\r\n\r\n##### Full List Of Technology Used\r\n\r\n- TypeScript\r\n  - The whole library is written in TypeScript. \r\n- NodeJS\r\n- Chokidar\r\n  - Replaces NodeJS built in file watch. \r\n- dsCom\r\n  - Uses my package dsCom for console output.\r\n- NPM\r\n  - Used to host and install the package.\r\n\r\n#### Design\r\n\r\nI wanted this to be easy to use as possible. You can use the tool to auto create a config file and then set up the application from there. Before it runs it verifies the config and makes sure that it has access to those directories and files. \r\n\r\nThough it uses some objects it is mostly built uses a functional style. \r\n\r\n#### Notes\r\n\r\nI created this because some of my projects use the some code base but run on different backends. For instance you can create an application that can run on as an electron app, a web page, and a mobile app. The code may be pretty much the same but some things such as data fetching will have to replaced with the specific needed code. \r\n\r\n#### Links\r\n\r\n[View On NPM](https://www.npmjs.com/package/dsst)\r\n\r\n[View On GitHub](https://github.com/Divine-Star-Software/DivineStarScriptTool)\r\n\r\n\r\n\r\n\r\n\r\n","id":"DSST"},"__N_SSG":true}