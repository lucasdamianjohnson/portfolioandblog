"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8593],{70901:function(e,t,r){r.d(t,{Z:function(){return n}});class n{async decode(e,t){let r=await this.decodeBlock(t),n=e.Predictor||1;if(1!==n){let t=!e.StripOffsets;return function(e,t,r,n,a,i){if(!t||1===t)return e;for(let e=0;e<a.length;++e){if(a[e]%8!=0)throw Error("When decoding with predictor, only multiple of 8 bits are supported.");if(a[e]!==a[0])throw Error("When decoding with predictor, all samples must have the same size.")}let o=a[0]/8,l=2===i?1:a.length;for(let i=0;i<n;++i){let n;if(i*l*r*o>=e.byteLength)break;if(2===t){switch(a[0]){case 8:n=new Uint8Array(e,i*l*r*o,l*r*o);break;case 16:n=new Uint16Array(e,i*l*r*o,l*r*o/2);break;case 32:n=new Uint32Array(e,i*l*r*o,l*r*o/4);break;default:throw Error(`Predictor 2 not allowed with ${a[0]} bits per sample.`)}!function(e,t){let r=e.length-t,n=0;do{for(let r=t;r>0;r--)e[n+t]+=e[n],n++;r-=t}while(r>0)}(n,l,o)}else 3===t&&function(e,t,r){let n=0,a=e.length,i=a/r;for(;a>t;){for(let r=t;r>0;--r)e[n+t]+=e[n],++n;a-=t}let o=e.slice();for(let t=0;t<i;++t)for(let n=0;n<r;++n)e[r*t+n]=o[(r-n-1)*i+t]}(n=new Uint8Array(e,i*l*r*o,l*r*o),l,o)}return e}(r,n,t?e.TileWidth:e.ImageWidth,t?e.TileLength:e.RowsPerStrip||e.ImageLength,e.BitsPerSample,e.PlanarConfiguration)}return r}}},88593:function(e,t,r){r.r(t),r.d(t,{default:function(){return a}});var n=r(70901);class a extends n.Z{constructor(){if(super(),"undefined"==typeof createImageBitmap)throw Error("Cannot decode WebImage as `createImageBitmap` is not available");if("undefined"==typeof document&&"undefined"==typeof OffscreenCanvas)throw Error("Cannot decode WebImage as neither `document` nor `OffscreenCanvas` is not available")}async decode(e,t){let r;let n=new Blob([t]),a=await createImageBitmap(n);"undefined"!=typeof document?((r=document.createElement("canvas")).width=a.width,r.height=a.height):r=new OffscreenCanvas(a.width,a.height);let i=r.getContext("2d");return i.drawImage(a,0,0),i.getImageData(0,0,a.width,a.height).data.buffer}}}}]);