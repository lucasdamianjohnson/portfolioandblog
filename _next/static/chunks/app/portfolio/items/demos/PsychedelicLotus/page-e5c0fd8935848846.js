(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5226],{27951:function(e,n,t){Promise.resolve().then(t.bind(t,22e3))},26225:function(e,n){"use strict";function t(){return null}Object.defineProperty(n,"__esModule",{value:!0}),Object.defineProperty(n,"default",{enumerable:!0,get:function(){return t}}),("function"==typeof n.default||"object"==typeof n.default&&null!==n.default)&&void 0===n.default.__esModule&&(Object.defineProperty(n.default,"__esModule",{value:!0}),Object.assign(n.default,n),e.exports=n.default)},22e3:function(e,n,t){"use strict";t.r(n);var o=t(57437);t(27e3);var r=t(3582),i=t(38697),a=t(85017),s=t(97937),c=t(5377),l=t(39884),d=t(16606);s.Q.ShadersStore.melsDomainVertexShader="\nprecision highp float;\n// Attributes\nattribute vec3 position;\nattribute vec2 uv;\n// Uniforms\n \nuniform float time;\nuniform mat4 worldViewProjection;\nuniform mat4 world;                    \nuniform mat4 view;                    \nuniform mat4 viewProjection;      \n// Varying\nvarying vec2 vUV;\nvoid main(void) {\n    vec4 worldPosition = world * vec4(position, 1.0);\n    gl_Position = worldViewProjection * vec4(position, 1.0); \n\n    vUV = uv;\n}",s.Q.ShadersStore.melsDomainFragmentShader="\nprecision highp float;\nuniform float sphereOffset;\nuniform float time;\nuniform vec2 resolution;\nuniform vec3 cameraPosition;\nuniform vec3 cameraDirection;\n\nconst float pi = acos(-1.);\nconst float pi2 = pi * 2.;\n\nvec3 lightDir = normalize(vec3(0.05, 0.5, -0.05));\n\nmat2 rot(float a) {\n    float s = sin(a), c = cos(a);\n    return mat2(c, s, -s, c);\n}\n\nvec2 pmod(vec2 p, float d) {\n    float a = atan(p.x, p.y) + pi / d;\n    float n = pi2 / d;\n    a = floor(a / n) * n;\n    return p * rot(-a);\n}\n\nfloat sdBox(vec3 p, vec3 b) {\n    vec3 d = abs(p) - b;\n    return length(max(d, 0.0)) + min(max(max(d.x, d.y), d.z), 0.0);\n}\n\nfloat sdHexPrism(vec3 p, vec2 h) {\n    vec3 q = abs(p);\n    return max(q.z - h.y, max((q.x * 0.866025 + q.y * 0.5), q.y) - h.x);\n}\n\nfloat sdSphere(vec3 p, float r) {\n    return length(p) - r;\n}\n\nfloat map(vec3 p) {\n    p.z += time * 0.1;\n    if (p.z > 0.0) {\n        p.xy = pmod(p.xy, -16.0);\n        p.y -= 2.0;\n        p.z = mod(p.z, 8.0) - 8.0;\n    } else {\n        p.xy = pmod(p.xy, 16.0);\n        p.y -= 2.0;\n        p.z = mod(p.z, -8.0) + 8.0;\n    }\n\n    vec3 movingSphereCenter = vec3(cos(sphereOffset * 0.1), sin(sphereOffset * 0.1), 0.0);\n    float d1 = sdSphere(p + movingSphereCenter, 2.4);\n    for (int i = 0; i < 4; i++) {\n        p = abs(p) - 1.0;\n    }\n\n    d1 -= sdSphere(p - movingSphereCenter + vec3(0.0, sin(time * 0.1) * 5.0, 0.0), 0.1);\n    d1 += sdHexPrism(p + movingSphereCenter + vec3(0.0, sin(time * 0.1) * 5.0, 0.0), vec2(0.1, 0.1));\n    d1 -= sdBox(p * -movingSphereCenter, vec3(0.1, 0.1, 0.1));\n    return d1;\n}\n\nvec3 hsv(float h, float s, float v) {\n    vec3 res = fract(h + vec3(1.0, 2.0 / 3.0, 1.0 / 3.0)) * 6.0 - 3.0;\n    res = clamp(abs(res) - 1.0, 0.0, 1.0);\n    res = res * res * (3.0 - 2.0 * res);\n    res = (res - 1.0) * s + 1.0;\n    return res * v;\n}\n\nvec3 getColor(float offset) {\n    float hue = mod(time * 0.01 + offset, 1.0);\n    vec3 colorLight = hsv(hue, 0.6, 0.9);\n    vec3 colorDark = hsv(hue, 0.6, 0.5);\n    float mixFactor = 0.5 + 0.5 * sin(time * 0.1 + offset);\n    mixFactor = smoothstep(0.0, 1.0, mixFactor);\n    vec3 final = mix(colorLight, colorDark, mixFactor);\n    return final;\n}\n\nvoid main() {\n    vec2 p = (gl_FragCoord.xy * 2.0 - resolution.xy) / min(resolution.x, resolution.y);\n    vec3 color = vec3(0.0);\n\n    vec3 cPos = cameraPosition;\n    vec3 fwd = cameraDirection;\n    vec3 u = normalize(vec3(0.0, 1.0, 0.0));\n    vec3 side = normalize(cross(u, fwd));\n    u = normalize(cross(fwd, side));\n    vec3 rd = normalize(p.x * side + p.y * u + fwd * (1.0 - 0.1 * (1.0 - dot(p, p))));\n\n    float ac = 0.0;\n    for (int i = 0; i < 64; i++) {\n        float d = map(cPos);\n        d = max(abs(d), 0.2);\n        ac += exp(-d * 4.0);\n        cPos += d * rd;\n    }\n\n    color += ac * 0.1 * getColor(0.0);\n    gl_FragColor = vec4(color, 1.0);\n}\n\n";let f=new l.P(0,0,-1);n.default=function(e){return(0,o.jsx)(i.X,{title:"Psychedelic Lotus",description:"Psychedelic Lotus",children:(0,o.jsx)(r.Z,{id:"main",className:"render-canvas",onSceneReady:e=>{let n=new c.j("shader",e,{vertex:"melsDomain",fragment:"melsDomain"},{attributes:["position","normal","uv"],uniforms:["world","worldView","worldViewProjection","view","projection","time","sphereOffset","cameraPosition","cameraDirection","resolution"]}),t=(0,a.Qk)("skyBox",{diameter:600,segments:3},e),o=new d.c("",new l.P,e),r=e.getEngine(),i=r.getRenderingCanvas();o.attachControl(i,!0),e.activeCamera=o,n.setVector2("resolution",new l.FM(1920,1080));let s=0,u=new l.P,m=new l.P,v=new l.P,p=new l.FM;e.registerBeforeRender(()=>{if(r.getRenderingCanvas()){let e=r.getRenderingCanvas().getBoundingClientRect();p.set(e.width,e.height),n.setVector2("resolution",p)}let t=e.activeCamera.getDirection(f);v.x=-1*t.x,v.y=-1*t.y,v.z=-1*t.z,m.x=.1*e.activeCamera.globalPosition.x+u.x,m.y=u.y,m.z=.1*e.activeCamera.globalPosition.z+u.z,n.setVector3("cameraPosition",m),n.setVector3("cameraDirection",v),n.setFloat("time",s),s+=.1}),n.sideOrientation=0,t.material=n}})})}},3582:function(e,n,t){"use strict";t.d(n,{Z:function(){return s}});var o=t(57437),r=t(89936),i=t(44755),a=t(2265);function s(e){let n=(0,a.useRef)(null),{antialias:t,engineOptions:s,adaptToDeviceRatio:c,sceneOptions:l,onSceneReady:d,...f}=e;return(0,a.useEffect)(()=>{if(!n.current)return;let o=new r.D(n.current,t,s,c),a=new i.x(o,l),d=n.current,f=()=>{a.getEngine().resize(),d.width=window.innerWidth,d.height=window.innerHeight};return(async()=>{await e.onSceneReady(a),o.runRenderLoop(()=>{a.render()}),window.addEventListener("resize",f),f()})(),()=>{a.dispose(),o.dispose(),window.removeEventListener("resize",f)}},[]),(0,o.jsx)("canvas",{ref:n,...f})}},38697:function(e,n,t){"use strict";t.d(n,{X:function(){return a}});var o=t(57437),r=t(26225),i=t.n(r);t(20123);let a=e=>(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(i(),{children:[(0,o.jsx)("title",{children:e.title}),(0,o.jsx)("meta",{name:"description",content:e.description})]}),e.children]})},27e3:function(){},20123:function(){}},function(e){e.O(0,[697,5889,1218,5611,4849,4913,8342,7857,2971,2117,1744],function(){return e(e.s=27951)}),_N_E=e.O()}]);