"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[8570],{18570:function(e,a,i){i.r(a),i.d(a,{_DDSTextureLoader:function(){return p}});var t=i(8937),s=i(90580);class p{constructor(){this.supportCascades=!0}loadCubeData(e,a,i,p){let n;let o=a.getEngine(),r=!1,u=1e3;if(Array.isArray(e))for(let i=0;i<e.length;i++){let t=e[i];n=s.N.GetDDSInfo(t),a.width=n.width,a.height=n.height,r=(n.isRGB||n.isLuminance||n.mipmapCount>1)&&a.generateMipMaps,o._unpackFlipY(n.isCompressed),s.N.UploadDDSLevels(o,a,t,n,r,6,-1,i),n.isFourCC||1!==n.mipmapCount?u=n.mipmapCount-1:o.generateMipMapsForCubemap(a)}else n=s.N.GetDDSInfo(e),a.width=n.width,a.height=n.height,i&&(n.sphericalPolynomial=new t.i),r=(n.isRGB||n.isLuminance||n.mipmapCount>1)&&a.generateMipMaps,o._unpackFlipY(n.isCompressed),s.N.UploadDDSLevels(o,a,e,n,r,6),n.isFourCC||1!==n.mipmapCount?u=n.mipmapCount-1:o.generateMipMapsForCubemap(a,!1);o._setCubeMapTextureParams(a,r,u),a.isReady=!0,a.onLoadedObservable.notifyObservers(a),a.onLoadedObservable.clear(),p&&p({isDDS:!0,width:a.width,info:n,data:e,texture:a})}loadData(e,a,i){let t=s.N.GetDDSInfo(e),p=(t.isRGB||t.isLuminance||t.mipmapCount>1)&&a.generateMipMaps&&Math.max(t.width,t.height)>>t.mipmapCount-1==1;i(t.width,t.height,p,t.isFourCC,()=>{s.N.UploadDDSLevels(a.getEngine(),a,e,t,p,1)})}}}}]);